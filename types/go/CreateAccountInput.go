type CreateAccountInput struct {
	AssociatedEntities     *AssociatedEntities     `json:"associated_entities,omitempty"`     
	CycleType              *CycleType              `json:"cycle_type,omitempty"`              
	EffectiveAt            *string                 `json:"effective_at,omitempty"`            // The `Date-Time` as of which this account is effective on the server.
	ExternalAccountID      *string                 `json:"external_account_id,omitempty"`     // Note: The value passed here *must* be unique. This ties to a reference of your account in; an external system. For example, you may have a ten digit loan number you use to; reference the account.
	ExternalFields         []ExternalField         `json:"external_fields,omitempty"`         // External fields can be used to relate accounts created in Canopy to entities in your or; any external system.
	ExternalProductID      *string                 `json:"external_product_id,omitempty"`     // Note: The value passed here *must* be unique. A unique external ID that may be used; interchangeably with the Canopy-generated product ID. Either external ID or Canopy; product ID must be passed at the time of account creation.
	PaymentProcessorConfig *PaymentProcessorConfig `json:"payment_processor_config,omitempty"`
	PostPromoOverview      *PostPromoOverview      `json:"post_promo_overview,omitempty"`     
	ProductID              *string                 `json:"product_id,omitempty"`              // A unique product ID generated by Canopy.
	PromoOverview          *PromoOverview          `json:"promo_overview,omitempty"`          
	Summary                *Summary                `json:"summary,omitempty"`                 
	AssignCustomers        []AssignCustomer        `json:"assign_customers,omitempty"`        // Array of existing customer IDs to be added to the account. At least one existing *OR* one; new customer must be included in account creation.
}

type AssignCustomer struct {
	CustomerAccountExternalID            *string                               `json:"customer_account_external_id,omitempty"`            // A unique number for the customer on the account. For instance, a credit card number. If; none is provided, a Canopy-generated ID can be used.
	CustomerAccountIssuerProcessorConfig *CustomerAccountIssuerProcessorConfig `json:"customer_account_issuer_processor_config,omitempty"`
	CustomerAccountRole                  *CustomerAccountRole                  `json:"customer_account_role,omitempty"`                   // The role of the customer for the account.
	CustomerID                           string                                `json:"customer_id"`                                       // A unique account ID generated by Canopy.
}

type CustomerAccountIssuerProcessorConfig struct {
	Lithic *Lithic `json:"lithic,omitempty"`
}

type Lithic struct {
	Memo  *string `json:"memo,omitempty"` // Friendly name to identify the card
	State *State  `json:"state,omitempty"`// The state of the new card
	Type  *Type   `json:"type,omitempty"` // The type of card created by Lithic
}

type AssociatedEntities struct {
	LenderName   *string `json:"lender_name,omitempty"`  // A lender name associated with the account
	MerchantName *string `json:"merchant_name,omitempty"`// A merchant name associated with the account
}

type CycleType struct {
	FirstCycleInterval *string `json:"first_cycle_interval,omitempty"`// Interval for a first cycle for this account.
}

type ExternalField struct {
	Key   *string `json:"key,omitempty"`  // key: i.e. Name of the External Party
	Value *string `json:"value,omitempty"`// value: i.e. External Account ID
}

type PaymentProcessorConfig struct {
	AutopayEnabled       *bool                 `json:"autopay_enabled,omitempty"`       // Indicates whether autopay is enabled for this account. Autopay is triggered one day prior; to due date. If `payment_processor_name` is `NONE`, autopay will not be triggered for the; account regardless of this field.
	PaymentProcessorName *PaymentProcessorName `json:"payment_processor_name,omitempty"`// Indicates the active payment processor used for payments made by the account. If `NONE`,; Canopy will not trigger payments to any payment processor when they occur.
	RepayConfig          *RepayConfig          `json:"repay_config,omitempty"`          // All sensitive bank information will be replaced with a secure token when performing; transactions.
}

// All sensitive bank information will be replaced with a secure token when performing
// transactions.
type RepayConfig struct {
	RepayAccountNumber int64              `json:"repay_account_number"`// Account number is an eight to ten digit number that identifies a specific account.
	RepayAccountType   RepayAccountType   `json:"repay_account_type"`  // Type of account: Savings or Checking.
	RepayCheckType     RepayCheckType     `json:"repay_check_type"`    // Type of checking account: Personal or Business.
	RepayNameOnCheck   string             `json:"repay_name_on_check"` // Account holder's name as it appears on the account.
	RepayPaymentMethod RepayPaymentMethod `json:"repay_payment_method"`// The payment method used by the account
	RepayTransitNumber int64              `json:"repay_transit_number"`// Transit number is a nine-digit code based on the U.S. Bank location where your account; was opened.
}

type PostPromoOverview struct {
	PostPromoImplInterestRatePercent *float64 `json:"post_promo_impl_interest_rate_percent,omitempty"`// The percentage interest applied to the account during the post-promotional period (e.g.; 6.2)
	PostPromoLen                     *int64   `json:"post_promo_len,omitempty"`                       // If applicable, post-promotional amortization length in cycles.
}

type PromoOverview struct {
	PromoImplInterestRatePercent *float64 `json:"promo_impl_interest_rate_percent,omitempty"`// The percentage interest applied to the account during the promotional period (e.g. 6.2)
}

type Summary struct {
	AnnualFeeCents              *int64 `json:"annual_fee_cents,omitempty"`               // An annual fee to be charged yearly from the date of account creation. It will reflect on; the subsequent statement once incurred.
	CreditLimitCents            *int64 `json:"credit_limit_cents,omitempty"`             // Total amount (in cents) that this account can borrow.
	InitialPrincipalCents       *int64 `json:"initial_principal_cents,omitempty"`        // The initial principal balance (in cents) for the account.
	LateFeeCents                *int64 `json:"late_fee_cents,omitempty"`                 // The fee charged for late payments on the account.
	MaxApprovedCreditLimitCents *int64 `json:"max_approved_credit_limit_cents,omitempty"`// Total amount (in cents) that this account can borrow.
	MonthlyFeeCents             *int64 `json:"monthly_fee_cents,omitempty"`              // A monthly fee to be charged monthly from the date of account creation. It will reflect on; the subsequent statement once incurred.
	OriginationFeeCents         *int64 `json:"origination_fee_cents,omitempty"`          // The fee charged at the time of account origination
	PaymentReversalFeeCents     *int64 `json:"payment_reversal_fee_cents,omitempty"`     // The fee charged for payment reversals on the account.
}

// The state of the new card
type State string
const (
	Open State = "OPEN"
	Paused State = "PAUSED"
)

// The type of card created by Lithic
type Type string
const (
	MerchantLocked Type = "MERCHANT_LOCKED"
	SingleUse Type = "SINGLE_USE"
	Unlocked Type = "UNLOCKED"
)

// The role of the customer for the account.
type CustomerAccountRole string
const (
	Primary CustomerAccountRole = "PRIMARY"
	Secondary CustomerAccountRole = "SECONDARY"
)

// Indicates the active payment processor used for payments made by the account. If `NONE`,
// Canopy will not trigger payments to any payment processor when they occur.
type PaymentProcessorName string
const (
	None PaymentProcessorName = "NONE"
	Repay PaymentProcessorName = "REPAY"
)

// Type of account: Savings or Checking.
type RepayAccountType string
const (
	Checking RepayAccountType = "CHECKING"
	Savings RepayAccountType = "SAVINGS"
)

// Type of checking account: Personal or Business.
type RepayCheckType string
const (
	Business RepayCheckType = "BUSINESS"
	Personal RepayCheckType = "PERSONAL"
)

// The payment method used by the account
type RepayPaymentMethod string
const (
	Ach RepayPaymentMethod = "ACH"
)
