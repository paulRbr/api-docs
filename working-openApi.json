{
  "openapi": "3.0.0",
  "info": {
    "title": "Canopy Servicing Core API",
    "description": "**API Overview** \n Canopy allows you to easily manage credit products from a servicing and compliance perspective - whether newly launched or migrated from existing systems. Using Canopy, you can track balances and transactions for each customer of your product, both in real-time and historically. You can access and track information related to disputes, see how various policy and product changes would impact your customers, and readily generate compliance reports and minimize your risk with all real-time information always on hand. \n \n Simply configure your productâ€™s policies through our [Policy Management Dashboard](https://admin.canopyservicing.com), and then you can immediately begin adding customer accounts and relying on Canopy for accurate servicing information.",
    "termsOfService": "https://api.canopyservicing.com/terms/",
    "contact": {
      "email": "will@canopyservicing.com"
    },
    "version": "1.3"
	},
	"x-topics": [
		{
			"title": "Getting Started",
			"content": "*Get started in four easy steps.* \n \n 1) Review the [Authentication](https://docs.canopyservicing.com/#topic-authentication) section to connect and experiment with our Sandbox environment. \n \n 2) [Contact us](mailto:anurag@canopyservicing.com?subject=API%20Access%20Request) to request Production API Keys and learn more about our business. \n \n 3) Configure policies \n &nbsp; &nbsp; &nbsp; a) For most uses, we recommend using the [Policy Management Dashboard](https://admin.canopyservicing.com) \n &nbsp; &nbsp; &nbsp; b) If you will be configuring many credit products programmatically or require niche configurations, you can also configure products in Canopy directly through our Policy Management API. \n \n 4) Once your product is configured and launched in Canopy, you have access to the full power of the Servicing API! You can take advantage of sample workflows provided by our team, or construct your own using this API documentation."
		},
		{
			"title": "Authentication",
			"content": "**Sandbox** \n \n To Authenticate to our Sandbox environment, no prior contact with our team is required (though we'd certainly love to connect!). Simply make an unauthenticated `POST` request to `https://sandbox.canopyservicing.com/auth_sandbox`. The response body returns a unique `api_user_id`. \n \n For any subsequent calls to our API, include a header `x-api-key` whose value is this unique `api_user_id` as part of your request. This lets us know that you are submitting a valid Sandbox request and grants you access to our entire Sandbox API. \n \n **Production** \n \n To request production credentials, [contact our team](mailto:anurag@canopyservicing.com)."
		}
	],
  "servers": [
    {
      "url": "https://sandbox.canopyservicing.com",
      "description": "Sandbox"
    }
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "products",
      "description": "Create and launch credit products within the Canopy system."
		},
		{
			"name": "users",
			"description": "Create persistent API users to support servicing workflows through Canopy"
		},
    {
      "name": "authentication",
      "description": "Authenticate to use the appropriate environment (sandbox or production) within Canopy"
    },
    {
      "name": "customers",
      "description": "Onboard customers into your system, so they can begin using your credit products"
    },
    {
      "name": "accounts",
      "description": "Manage the way your customers use credit products you've launched in Canopy"
    }
  ],
  "paths": {
    "/auth_sandbox": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Authenticate to the Canopy Sandbox",
        "operationId": "createSandboxUser",
        "description": "When you create a new `root-level` user via this `POST` request, Canopy will respond with a unique ID for that user. \n Include this response as a header for all subsequent requests to the Canopy API under the header: `x-api-userid`.",
        "responses": {
          "200": {
            "description": "Successful authentication to the Canopy Sandbox.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "api_user_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique `x-api-userid` ID to be used in headers for subsequent calls to the Canopy Sandbox API.",
                      "example": "be4e95b9-46ed-418a-ad7b-56c8065622cf"
                    }
                  }
                }
              }
            }
          }
        }
      }
		},
		"/api_user_invitations": {
			"post": {
				"summary": "Invite a new API user",
				"description": "Invite a new user to the API",
				"requestBody": {
					"$ref": "#/components/requestBodies/CreateApiUserInvitation"
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/CreateApiUserInvitation"
					}
				}
			}
		},
		"/api_users": {
			"post": {
				"summary": "Create a new API user",
				"tags": ["users, authentication"],
				"operationId": "createApiUser",
				"description": "Create a new API User that exists under the umbrella of a root-level user. An API user must first be [invited](https://docs.canopyservicing.com/#endpoint-api-user-invitations) before they can be created in the system.",
				"requestBody": {
					"$ref": "#/components/requestBodies/CreateApiUser"
				},
				"responses": {
					"200": {
						"description": "Successfully created a new API user",
						"$ref": "#/components/responses/ApiUser"
					}
				}
			}
		},
		"/api_users/{email}": {
			"put": {
				"summary": "Update an existing API user",
				"description": "Update content for an existing API user",
				"requestBody": {
					"$ref": "#/components/requestBodies/UpdateApiUser"
				},
				"responses": {
					"200": {
						"description": "Successfully updated API user",
						"$ref": "#/components/responses/ApiUser"
					}
				}
			}
		},
		"/api_users/sign_in": {
			"post": {
				"summary": "Log in as an API User",
				"description": "Sign in as an API user, under your root user's umbrella.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "The email address of this API User",
										"example": "marissa@globex.com"
									},
									"password": {
										"type": "string",
										"description": "The password for this API User's account",
										"example": "secret_password123!!"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully logged in",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"token": {
											"type": "string",
											"format": "uuid",
											"description": "A unique token that is valid for the session and should be included in all authenticated API requests under the header `x-api-user`.",
											"example": "12f2aa7c-204a-46bc-b1c8-370b131cd135"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/customer_accounts": {
      "get": {
        "tags": [
          "customers, accounts"
        ],
        "summary": "Get all accounts for all customers",
        "description": "Returns all accounts from the perspective of each customer. For instance, if one account has two customers, these are reflected as two separate items in the response array. Similarly, if one customer has multiple accounts, each account is reflected as a separate item in the response array.",
        "operationId": "getCustomersAccounts",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-indexed starting point for paginated account requests sorted by account created date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "110"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of accounts to be returned. Defaults to 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "50"
            }
          },
					{
						"name": "search_query",
						"in": "query",
						"description": "A search query to be applied to results before the customer accounts list is returned. Search by name, phone number, account ID, or SSN last-four digits.",
						"required": false,
						"style": "form",
						"example": true,
						"schema": {
							"type": "string",
							"example": "Coco Parker"
						}
					},
					{
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the customers were as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Customers and their corresponding Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "description": "An array of information for all customer-account correspondences within the requested range.",
											"items": {
												"$ref": "#/components/schemas/CustomerAccount"
                      }
                    },
                    "total_customer_account_count": {
                      "type": "number",
                      "description": "Total number of unique customer-account correspondences"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to get customers"
          }
        }
      }
		},
    "/customers": {
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "customers"
        ],
        "summary": "Create a new customer",
        "operationId": "CreateCustomer",
        "description": "Customer can be created within Canopy with attached data managed in a secure and compliant way to facilitate providing the best service for products created through Canopy.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateCustomer"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateCustomer"
          }
        }
      },
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get all customers",
        "description": "Returns all of your customers. Results are paginated.",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-indexed starting point for paginated account requests sorted by account created date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "110"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of accounts to be returned. Defaults to 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "50"
            }
          },
					{
						"name": "search_query",
						"in": "query",
						"description": "A search query to be applied to results before the customers list is returned. Search by name, phone number, or SSN last-four digits.",
						"required": false,
						"style": "form",
						"example": true,
						"schema": {
							"type": "string",
							"example": "Coco Parker"
						}
					},
					{
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the customers were as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "description": "An array of information for all customers within the requested range.",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "total_customer_count": {
                      "type": "number",
                      "description": "Total number of accounts"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to get customers"
          }
        }
      }
    },
    "/customers/{customer_id}": {
      "put": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "customers"
        ],
        "summary": "Update an existing customer",
        "operationId": "CreateCustomer",
        "description": "Customers can be created within Canopy with attached data managed in a secure and compliant way to facilitate providing the best service for products created through Canopy.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "description": "The ID of the customer to be updated.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
							"format": "uuid",
              "example": "975d11ab-92d3-489e-9aa5-8d0277b0222a"
            }
          },
					{
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE update a customer as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
				],
				"requestBody": {
          "$ref": "#/components/requestBodies/CreateCustomer"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreateCustomer"
          }
        }
      },
			"get": {
				"tags": [
          "customers"
        ],
        "summary": "Get a specific customer",
        "description": "Returns summary information for a specific customer.",
        "operationId": "getCustomer",
        "parameters": [
					{
						"name": "customer_id",
						"in": "path",
						"description": "The ID of the customer to return.",
						"required": true,
						"style": "simple",
						"example": true,
						"schema": {
							"type": "string",
							"example": "Coco Parker"
						}
					}
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Customer"
          },
          "404": {
            "description": "Unable to get customer"
          }
        }
			}
    },
    "/products": {
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "products"
        ],
        "summary": "Create a new product",
        "operationId": "createProduct",
        "description": "At its core, Canopy allows you to create credit products that meet the specific needs of your customers. We offer robust options to configure these products within our system. \n \n For most use cases, we recommend configuring products by using the [Policy Management Dashboard](https://canopyservicing.com); however, you can also configure and manage products programmatically. \n \n Request body for creating a new product. \n \n The following fields are minimum requirements for products to be published with the `live` status: \n - `name` \n - `default_rate` \n - `default_credit_limit_cents` \n `policies` (with an appropriate Base Policy Configuration)",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateProduct"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreateProduct"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "products"
        ],
        "summary": "Get all available products",
        "description": "If you have configured and launched multiple products within Canopy, retrieve information related to all of your configured products at once.",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the products were as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product_MVP"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Products"
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get info on a particular product",
        "operationId": "getProduct",
        "description": "Using the `product_id` which was generated when the product was launched, retrieve information pertaining to a specific product.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the Products were as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product_MVP"
                }
              }
            }
          },
          "404": {
            "description": "No Products found"
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update an existing product",
        "description": "Add additional configurations to a product. Products must be in the `draft` state to be updated.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the product information was as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateProduct"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreateProduct"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete an existing product",
        "description": "Delete an existing product. Product `status` must be `draft` to be deleted.",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "The Canopy-generated ID for your product.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the product"
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID of the deleted product.",
                      "example": "44c7298f-b515-4dc3-84b2-21186e1b1d3b"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}/accounts": {
      "get": {
        "tags": [
          "products",
          "accounts"
        ],
        "summary": "Get all accounts created under a specific product",
        "description": "Returns all accounts created under a specific product. Results are paginated.",
        "operationId": "getProductAccounts",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-indexed starting point for paginated account requests sorted by account created date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "110"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of accounts to be returned. Defaults to 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "50"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductAccounts"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/products/{product_id}/summaries": {
      "get": {
        "tags": [
          "accounts",
          "summary"
        ],
        "summary": "Get summary details for a specific product.",
        "description": "For analytic purposes, retrieve commonly needed summary statistics computed for a specific product.",
        "operationId": "getProductSummary",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the product summary information was on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductSummary"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "accounts"
        ],
        "summary": "Get all available Accounts",
        "description": "Get details for all accounts linked to any of your products. Results are sorted by the date the account was created.",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-indexed starting point for paginated account requests sorted by account created date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "110"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of accounts to be returned. Defaults to 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "50"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "description": "An array of information for all accounts within the requested range.",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "total_account_count": {
                      "type": "number",
                      "description": "Total number of accounts"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No accounts found"
          }
        }
      },
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "accounts",
          "programmatic"
        ],
        "summary": "Create a new account",
        "description": "An account should be created for each end customer of each of your products. Once created, you will be able to add `line_items` to the account.",
        "operationId": "createAccount",
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateAccount"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateAccount"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": [
          "accounts",
          "servicing"
        ],
        "summary": "Get a specific Account",
        "description": "",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a361c813-92e5-4765-82ea-9df368a81a89"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the account information was on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Account"
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "put": {
        "tags": [
          "accounts",
          "programmatic"
        ],
        "summary": "Update an account",
        "description": "Update `rate`, `credit_limit_cents`, or `status` for an individual account, or update the customers assigned to the account.",
        "operationId": "updateAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a361c813-92e5-4765-82ea-9df368a81a89"
            }
          }
        ],
        "requestBody": {
          "description": "Account",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Update attributes for an account at any time after account creation.",
                "properties": {
                  "rate": {
                    "type": "number",
                    "description": "The percentage default rate for accounts created under this interest policy (i.e. 5.2 indicates a 5.2% interest rate). You may customize rates for each account by overriding this default rate at the time of account creation or updating the rate for a given account.",
                    "example": "5.2"
                  },
                  "credit_limit_cents": {
                    "type": "integer",
                    "description": "The default total oustanding amout of money (in cents) that an account created under this product could borrow. You may customize rates for each account by overriding this default rate at the time of account creation or updating the rate for a given account.",
                    "example": "700000"
                  },
                  "account_status": {
                    "type": "string",
                    "description": "The Status of the Account. Active upon account creation.",
                    "example": "suspended"
                  },
                  "account_status_subtype": {
                    "type": "string",
                    "description": "The subtype of the Status of the Account. Null upon account creation.",
                    "example": "suspended-bankruptcy"
									},
									"existing_customers_to_add": {
										"type": "array",
										"description": "Array of existing customer IDs to be added to the account.",
										"items": {
											"type": "object",
											"properties": {
												"customer_id": {
													"type": "string",
													"format": "uuid",
													"description": "Canopy-generated unique ID for this customer",
													"example": "d581a0aa-5e11-473c-9569-64bc3a494287"
												},
												"customer_account_role": {
													"type": "string",
													"enum": ["primary"],
													"description": "The role of the customer for the account being created",
													"example": "primary"
												}
											}
										}
									},
									"existing_customers_to_remove": {
										"type": "array",
										"description": "Array of existing customer IDs to be added to the account. At least one customer must remain on the account at the end of the operation.",
										"items": {
											"type": "object",
											"properties": {
												"customer_id": {
													"type": "string",
													"format": "uuid",
													"description": "Canopy-generated unique ID for this customer",
													"example": "d581a0aa-5e11-473c-9569-64bc3a494287"
												},
												"customer_account_role": {
													"type": "string",
													"enum": ["primary"],
													"description": "The role of the customer for the account being created",
													"example": "primary"
												}
											}
										}
									}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/UpdateAccount"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "accounts",
          "servicing"
        ],
        "summary": "Delete a specific Account",
        "description": "Deleting an account also deletes all of its associated line items.",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account Deleted"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items": {
      "get": {
        "tags": [
          "accounts",
          "line_items"
        ],
        "summary": "Get line items for a specific account.",
        "description": "Line Items for an Account consist of `charges` to the account and `payments` by the account holder. Results are paginated and sorted by line item effective date.",
        "operationId": "getAccountLineItems",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the line items were on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "line_item_type",
            "in": "query",
            "description": "The type of line items you would like to view. Options are `charges` and `payments`. If not provided, no filters will be applied.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "charges"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-indexed starting point for paginated line item requests sorted by line item effective date.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "110"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of line items to be returned. Defaults to 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "example": "50"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Line Items and their corresponding balances at their effective dates and times.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The account associated with the line item",
                        "example": "2911ff2a-bebe-4c85-8d19-e6001015a8e3"
                      },
                      "line_item_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ce9ed376-f151-435f-a59c-9e3cc183bbea"
                      },
                      "line_item_status": {
                        "type": "string",
                        "description": "the corresponding Status for a line item",
                        "enum": [
                          "posted",
                          "valid",
                          "invalid",
                          "declined",
                          "authorized",
                          "void",
                          "pending",
                          "successful",
                          "unsuccessful"
                        ],
                        "example": "posted"
                      },
                      "type": {
                        "type": "string",
                        "description": "The Line Item Type. Either `charge` or `payment`.",
                        "enum": [
                          "charge",
                          "payment"
                        ],
                        "example": "charge"
                      },
                      "originating_amount_cents": {
                        "type": "number",
                        "description": "The originating amount of money (in cents) relating to this line item.",
                        "example": "2385"
                      },
                      "balance_amount_cents": {
                        "type": "number",
                        "description": "The current balance of the line item, which accounts for interest accrued per the `product's` interest policy and the `account's` interest rate attribute.",
                        "example": "2401"
                      },
                      "total_interest_accrued_cents": {
                        "type": "number",
                        "description": "The sum (in cents) of all interest charges, if any, applied to this line item",
                        "example": "16"
                      },
                      "total_paid_down_cents": {
                        "type": "number",
                        "description": "The sum (in cents) of all payment splits, if any, applied to this line item",
                        "example": "1125"
                      },
                      "merchant_data": {
                        "type": "object",
                        "description": "",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "mcc_code": {
                            "type": "number"
                          },
                          "phone_number": {
                            "type": "string",
                            "format": "phonenumber"
                          }
                        }
                      },
                      "effective_at": {
                        "type": "string",
                        "description": "The `Date-Time` that this account became/becomes active",
                        "format": "date-time",
                        "example": "2018-07-20T09:12:30Z"
                      },
                      "created_at": {
                        "type": "string",
                        "description": "The `Date-Time` which the account was created in the API",
                        "format": "date-time",
                        "example": "2018-06-20T09:12:30Z"
                      },
                      "product_id": {
                        "type": "string",
                        "description": "the Product ID of the account",
                        "format": "uuid",
                        "example": "158cd7a1-d813-42d2-90a3-9a91c43f18f8"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of this particular line item if any. More common for adjustments.",
                        "example": "Refund for invalid purchase"
                      },
                      "reference_id": {
                        "type": "string",
                        "description": "User ID in your system to associate with the payment for the account defined in Canopy.",
                        "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
                      },
                      "dispute_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID for a dispute if present for this line item."
                      },
                      "external_ids": {
                        "type": "array",
                        "description": "An array of static references to ID fields in a third party system.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the External Party",
                              "example": "Globex Card Processing"
                            },
                            "id": {
                              "type": "string",
                              "description": "External Account ID",
                              "example": "22445702-a389-431f-927d-07b8d0750787"
                            }
                          }
                        }
                      },
                      "line_item_count": {
                        "type": "string",
                        "description": "Total number of line items for the account."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/{line_item_id}": {
      "get": {
        "tags": [
          "line_items",
          "accounts"
        ],
        "summary": "Get information on a specific line item for a specific account",
        "description": "",
        "operationId": "getAccountLineItem",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "17d25206-1012-4576-89f0-c5fe128edd3e"
            }
          },
          {
            "name": "line_item_id",
            "in": "path",
            "description": "Line Item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "8f0a3e81-24b9-4d32-b15b-a59257ed7485"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the products were as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/LineItem"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/charges": {
      "post": {
        "tags": [
          "line_items",
          "charges",
          "accounts"
        ],
        "summary": "Create a charge for a specific account",
        "description": "",
        "operationId": "createAccountCharge",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateCharge"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreateCharge"
          },
          "401": {
            "description": "You are not authenticated"
          },
          "403": {
            "description": "You are not authorized"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/payments": {
      "post": {
        "tags": [
          "line_items",
          "payments",
          "accounts"
        ],
        "summary": "Create a payment for a specific account",
        "description": "",
        "operationId": "createAccountPayment",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreatePayment"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/CreatePayment"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/{line_item_id}/disputes": {
      "post": {
        "tags": [
          "accounts",
          "line_items",
          "disputes"
        ],
        "summary": "Create a dispute for a specific account's line item",
        "description": "",
        "operationId": "createDispute",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "line_item_id",
            "in": "path",
            "description": "Line Item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response upon successful creation of a dispute",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "line_item_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dispute_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/adjustments/credit": {
      "post": {
        "tags": [
          "line_items",
          "payments",
          "accounts"
        ],
        "summary": "Create a payment for a specific account",
        "description": "",
        "operationId": "createAccountPayment",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateCreditAdjustment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateCreditAdjustment"
          }
        }
      }
    },
    "/accounts/{account_id}/line_items/adjustments/debit": {
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateDebitAdjustment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateDebitAdjustment"
          }
        }
      }
    },
    "/accounts/{account_id}/statements_list": {
      "get": {
        "tags": [
          "accounts",
          "summary"
        ],
        "summary": "Get a list of all current and prior statements for a specific account",
        "description": "List of statements for the account. To view line items for a specific statement, use the `/accounts/{account_id}/statements` route",
        "operationId": "getAccountStatementsList",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the account information was on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Statements for the account.",
                  "properties": {
                    "account_id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The Canopy-generated ID for the account",
                      "example": "111eff36-cbec-4119-b188-b76200e804d8"
                    },
                    "effective_as_of_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the account information was as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
                      "example": "2018-07-20T09:10:14Z"
                    },
                    "statements_list": {
                      "type": "array",
                      "description": "An array of statements included in the billing cycle.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "statement_id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A Canopy-generated ID for the statement",
                            "example": "3627809b-ff07-4e41-b127-44260efb3b80"
                          },
                          "available_credit_balance": {
                            "type": "number",
                            "description": "The total available credit balance (in cents) for the account.",
                            "example": "600000"
                          },
                          "total_balance": {
                            "type": "number",
                            "description": "The total balance (in cents) associated with the account.",
                            "example": "400000"
                          },
                          "min_pay_due_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The `Date-Time` at which the minimum payment is due."
                          },
                          "min_pay_amount_cents": {
                            "type": "number",
                            "description": "The minimum amount (in cents) due for this statement."
                          },
                          "billing_cycle_start_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The inclusive starting `Date-Time` that defines which transations are part of this statement."
                          },
                          "billing_cycle_end_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The inclusive ending `Date-Time` that defines which transations are part of this statement."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/statements": {
      "get": {
        "tags": [
          "accounts",
          "summary"
        ],
        "summary": "Get a statement for a given date for a specific account.",
        "description": "This will return the most recent Statement information based on the `effective_as_of_date`. Relevant dates for an account's historical statements can be obtained from the `accounts/{account_id}/statements_list` route.",
        "operationId": "getAccountStatement",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "effective_as_of_date",
            "in": "query",
            "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the account information was on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountStatement"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "schemas": {
      "Account": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "This is generated by Canopy. A unique ID for the account.",
            "example": "5fb3a288-5f6c-440f-b079-b06c828b7768"
          },
          "account_status": {
            "type": "string",
            "description": "The Status of the Account. Active upon account creation.",
            "example": "suspended"
          },
          "account_status_subtype": {
            "type": "string",
            "description": "The subtype of the Status of the Account. Null upon account creation.",
            "example": "suspended-bankruptcy"
          },
          "effective_at": {
            "type": "string",
            "description": "The `Date-Time` that this account became/becomes active.",
            "format": "date-time",
            "example": "2018-03-20T09:12:28Z"
          },
          "created_at": {
            "type": "string",
            "description": "The `Date-Time` which the account was created in the API.",
            "format": "date-time",
            "example": "2017-06-20T09:12:14Z"
          },
          "product": {
            "description": "The product associated with the account",
            "$ref": "#/components/schemas/Product_MVP"
          },
          "external_account_ids": {
            "type": "array",
            "description": "An Array of External Account IDs. These should be used to connect accounts created in Canopy to Users in your system and any connected external systems.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the External Party",
                  "example": "Umbrella Corporation"
                },
                "id": {
                  "type": "string",
                  "description": "External Account ID",
                  "example": "22445702-a389-431f-927d-07b8d0750787"
                }
              }
            }
          },
          "total_balance": {
            "type": "number",
            "description": "The total balance (in cents) associated with the account.",
            "example": "300000"
          },
          "credit_limit_cents": {
            "type": "integer",
            "description": "Total Amount (in cents) that this account can borrow.",
            "example": "400000"
          },
          "rate": {
            "type": "number",
            "description": "The percentage interest applied to the account (i.e. 6.2 means 6.2%)",
            "example": "6.2"
          },
          "available_credit_balance": {
            "type": "number",
            "description": "The total available credit balance (in cents) for the account.",
            "example": "100000"
          }
        }
      },
			"ComplexAccount": {
				"allOf": [
					{"$ref": "#/components/schemas/Account"},
					{
						"type": "object",
						"properties": {
							"customers": {
								"type": "array",
								"description": "An array of customers who have been assigned to the account",
								"items": {
									"$ref": "#/components/schemas/ComplexCustomer"
								}
							}
						}
					}
				]
			},
      "Product_MVP": {
        "required": [
          "policies",
          "product_id"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_id": {
            "type": "string",
            "format": "uuid",
            "description": "The Canopy-generated ID for the product.",
            "example": "8fe1eb97-d640-45d6-83bb-f415ddf97a51"
          },
          "name": {
            "type": "string",
            "description": "Name of Product, i.e. Express Card.",
            "example": "Blue Cash Express"
          },
          "description": {
            "type": "string",
            "description": "Description of the Product.",
            "example": "Student credit card."
          },
          "created_at": {
            "type": "string",
            "description": "The `Date-Time` that this product was created on the server.",
            "format": "date-time",
            "example": "2019-03-20T09:12:28Z"
          },
          "type": {
            "type": "string",
            "description": "The Type of Product",
            "enum": [
              "CREDIT"
            ],
            "example": "CREDIT"
          },
          "status": {
            "type": "string",
            "description": "The status of a Product (i.e. `live` or `draft`). Products with the `draft` status require additional policy configurations to launch.",
            "enum": [
              "VALID"
            ],
            "example": "VALID"
          },
          "policies": {
            "type": "object",
            "description": "An object of policies that drive product behavior.",
            "properties": {
              "base_policy_config": {
                "$ref": "#/components/schemas/Base_Policy_Config_MVP"
              }
            }
          },
          "product_summary": {
            "$ref": "#/components/schemas/Product_Summary"
          },
          "default_attributes": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "number",
                "description": "The percent default rate for this interest policy (i.e. 3.2 means a 3.2% rate). This default rate can be overridden on a per-account basis if a `rate` is selected at the time of assigning an account to a product. Rates for an account can also be updated post-account creation.",
                "example": 3.2
              },
              "credit_limit_cents": {
                "type": "integer",
                "description": "The default maximum principal credit (in cents) available for a customer account. This default limit can be overridden on a per-account basis if a `credit_limit` is selected at the time of assigning an account to a product. Credit limits for an account can also be updated post-account creation.",
                "example": 600000
              }
            }
          }
        }
      },
      "Product_Summary": {
        "type": "object",
        "description": "Summary of product information.",
        "properties": {
          "accounts_overview": {
            "type": "object",
            "properties": {
              "account_count_total": {
                "type": "integer",
                "description": "Total number of accounts under the product.",
                "example": 10005
              },
              "account_count_delinquent": {
                "type": "integer",
                "description": "Total number of delinquent accounts under the product.",
                "example": 200
              }
            }
          },
          "total_credit_issued_cents": {
            "type": "integer",
            "description": "Total amount (in cents) of credit issued to accounts under the product.",
            "example": 25500000
          },
          "utilization_rate": {
            "type": "number",
            "description": "The percent utilization rate of the product.",
            "example": 30.34
          },
          "product_id": {
            "type": "string",
            "format": "uuid",
            "description": "The Canopy-generated ID for the product.",
            "example": "ca3cf4e9-5048-4461-a763-8f67b46dfd4d"
          },
          "effective_as_of_date": {
            "type": "string",
            "format": "date-time",
            "description": "The `Date-Time` you would like the system to return the data as of. IE \"tell me what the product information was as if I had asked on `2020-01-20 00:00:00 EST`\". If empty defaults to current time.",
            "example": "2017-06-20T09:12:14Z"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "format": "uuid",
            "description": "A Canopy-generated unique ID for the customer",
            "example": "78e1bae0-b7dd-4626-bcda-9d7e7b81be30"
          },
          "name_prefix": {
            "type": "string",
            "description": "Prefix to the customer's name",
            "example": "Dr."
          },
          "first_name": {
            "type": "string",
            "description": "Customer's first name",
            "example": "Miriam"
          },
          "middle_name": {
            "type": "string",
            "description": "Customer's middle name",
            "example": "Louise"
          },
          "last_name": {
            "type": "string",
            "description": "Customer's last name",
            "example": "Trevino"
          },
          "name_suffix": {
            "type": "string",
            "description": "Prefix to the customer's name",
            "example": "Jr"
          },
          "phone_number": {
            "type": "string",
            "format": "phonenumber",
            "description": "Phone number of the customer",
            "example": "555-555-5555"
          },
          "address_line_one": {
            "type": "string",
            "description": "Address line one",
            "example": "12 Strawberry Road"
          },
          "address_line_two": {
            "type": "string",
            "description": "Address line two",
            "example": "Suite 101"
          },
          "address_city": {
            "type": "string",
            "description": "Address city",
            "example": "Atlanta"
          },
          "address_state": {
            "type": "string",
            "description": "Address state",
            "example": "GA"
          },
          "address_zip": {
            "type": "string",
            "description": "Address zip code",
            "example": "99999-1000"
          },
          "ssn": {
            "type": "string",
            "description": "Social security number of the customer",
            "example": "888-88-8888"
          }
        }
      },
			"ComplexCustomer": {
				"allOf": [
					{"$ref": "#/components/schemas/Account"},
					{
						"type": "object",
						"properties": {
							"accounts": {
								"type": "array",
								"description": "An array of Accounts to which this Customer is assigned",
								"items": {
									"$ref": "#/components/schemas/ComplexAccount"
								}
							}
						}
					}
				]
			},
			"CustomerAccount": {
				"allOf": [
					{"$ref": "#/components/schemas/Account"},
					{"$ref": "#/components/schemas/Customer"},
					{
						"type": "object",
						"properties": {
							"customer_account_role": {
								"type": "string",
								"enum": ["primary"],
								"example": "primary"
							}
						}
					}
				]
			},
      "API_User": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of this API User.",
            "enum": [
              "superuser"
            ],
            "example": "superuser"
          },
          "api_user_id": {
            "type": "string",
            "format": "uuid",
            "description": "A Canopy-generated unique ID for the API User",
            "example": "b10fccd1-6c6f-4678-9240-6094296c0a91"
          },
          "name_prefix": {
            "type": "string",
            "description": "Prefix to the user's name",
            "example": "Dr."
          },
          "first_name": {
            "type": "string",
            "description": "User's first name",
            "example": "Miriam"
          },
          "middle_name": {
            "type": "string",
            "description": "User's middle name",
            "example": "Louise"
          },
          "last_name": {
            "type": "string",
            "description": "User's last name",
            "example": "Trevino"
          },
          "name_suffix": {
            "type": "string",
            "description": "Prefix to the user's name",
            "example": "Jr"
          },
					"email": {
						"type": "string",
						"format": "email",
						"description": "The email address of this API User",
						"example": "marissa@globex.com"
					},
          "password_hash": {
            "type": "string",
            "description": "The password hash for this API User",
            "example": "64A6DDFFF2BA644F1F0F972EC3CB39C9EA7C6C1C16DAE02B83F14B070B27DF23"
          }
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "ticket_id": {
            "type": "string",
            "format": "uuid",
            "description": "A Canopy-generated unique ID for the ticket",
            "example": "bb6db06e-32ea-4e6a-8e6f-6e704b606a7e"
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the ticket to which the Ticket is assigned",
            "example": "5fb3a288-5f6c-440f-b079-b06c828b7768"
          },
          "owner": {
            "description": "The API User currently assigned to the Ticket",
            "$ref": "#/components/schemas/API_User"
          },
          "notes": {
            "type": "array",
            "description": "An array of Notes written on the Ticket",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "pipeline": {
            "type": "string",
            "enum": [
              "escalations",
              "disputes",
              "adjustments"
            ],
            "description": "The review pipeline to which this ticket belongs",
            "example": "disputes"
          },
          "status": {
            "type": "string",
            "enum": [
              "not-reviewed",
              "under-review",
              "review-complete"
            ],
            "description": "The current status of the Ticket"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "note_id": {
            "type": "string",
            "format": "uuid",
            "description": "A Canopy-generated unique ID for the note",
            "example": "7b2e189d-d6bb-41c2-95c1-1174b58246fa"
          },
          "ticket_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID (if any) of the ticket to which the Note is assigned",
            "example": "bb6db06e-32ea-4e6a-8e6f-6e704b606a7e"
          },
					"account_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the account to which the Note is assigned",
            "example": "bb6db06e-32ea-4e6a-8e6f-6e704b606a7e"
          },
          "author": {
            "description": "The API User who authored the note",
            "$ref": "#/components/schemas/API_User"
          },
					"purpose": {
						"description": "The purpose for which the note was assigned.",
						"type": "string",
						"enum": ["user_update", "new_user", "account_status_change", "credit_adjustment", "debit_adjustment", "general_note"],
						"example": "debit_adjustment"
					},
					"amount": {
						"description": "The amount (in cents) (if any) associated with the note. For example, when a note pertains to a credit adjustment. I.e. 450 = $4.50",
						"type": "string",
						"example": "450"
					}
        }
      },
      "Base_Policy_Config_MVP": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"min_pay": {
						"$ref": "#/components/schemas/Base_Policy_Config_Min_Pay"
					},
					"billing_cycle": {
						"$ref": "#/components/schemas/Base_Policy_Config_Billing_Cycle"
					},
					"interest_policies": {
						"$ref": "./schemas/Interest_Policy_MVP.json"
					},
					"close_of_business_and_timezone": {
						"type": "string",
						"description":"Time and timezone of the close of business. This is used for statement cuts and partner-level and issuing bank-level reconciliation",
						"format": "date-time",
						"example": "2020-03-20T09:12:28Z"
					}
				},
				"description": "A base group of policies that define a Product"
			},
      "Base_Policy_Config_Min_Pay": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "number",
            "description": "The percentage of total balance calculated for min pay. (i.e. 20 means 20%)",
            "example": "20"
          }
        },
        "description": "The configured minimum payment required for a given pay period."
      },
      "Base_Policy_Config_Billing_Cycle": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "description": "The length of the billing cycle. after which a statement is generated, and a due date assigned. IE '1 month' '3 months' or '7 days' (most common is monthly)",
            "format": "interval",
            "example": "1 month"
          },
          "billing_due_date_interval": {
            "type": "string",
            "description": "The amount of time you would like between the statement cut and the billing due date. IE '25 days'.  Cannot exceed the start of the next billing cycle and generally needs to be at least 21 days.",
            "format": "interval",
            "example": "25 days"
          }
        },
        "description": "The Billing Cycle Object"
      },
      "Interest_Policy_MVP": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "compound"
            ],
            "example": "compound"
          },
          "method": {
            "type": "string",
            "description": "The actual base formula used to calculate and assign interest.",
            "enum": [
              "average daily balance"
            ],
            "example": "average daily balance"
          },
          "day_calc_type": {
            "type": "string",
            "description": "Affects the base calculation by determining how many days there are in a given year.",
            "enum": [
              "365"
            ],
            "example": "365"
          },
          "interest_calc_time": {
            "type": "string",
            "description": "Interest for this policy is calculated at this time every X interval.",
            "format": "date-time",
            "example": "05:00:00"
          }
        },
        "description": "The Interest Policy Object"
      },
      "Line_Item_MVP": {
        "required": [
          "account_id",
          "effective_at",
          "line_item_status",
          "line_item_id",
          "product_id",
          "type",
          "amount_cents",
          "created_at",
          "reference_id"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid",
            "description": "The account associated with the line item",
            "example": "2911ff2a-bebe-4c85-8d19-e6001015a8e3"
          },
          "line_item_id": {
            "type": "string",
            "format": "uuid",
            "example": "ce9ed376-f151-435f-a59c-9e3cc183bbea"
          },
          "line_item_status": {
            "type": "string",
            "description": "the corresponding Status for a line item",
            "enum": [
              "posted",
              "valid",
              "invalid",
              "declined",
              "authorized",
              "void",
              "pending",
              "successful",
              "unsuccessful"
            ],
            "example": "posted"
          },
          "type": {
            "type": "string",
            "description": "The Line Item Type. Either `charge` or `payment`.",
            "enum": [
              "charge",
              "payment"
            ],
            "example": "charge"
          },
          "originating_amount_cents": {
            "type": "number",
            "description": "The originating amount of money (in cents) relating to this line item."
          },
          "balance_amount_cents": {
            "type": "number",
            "description": "The current balance of the line item, which accounts for interest accrued per the `product's` interest policy and the `account's` interest rate attribute."
          },
          "total_interest_accrued_cents": {
            "type": "number",
            "description": "The sum (in cents) of all interest charges, if any, applied to this line item",
            "example": "16"
          },
          "total_paid_down_cents": {
            "type": "number",
            "description": "The sum (in cents) of all payment splits, if any, applied to this line item",
            "example": "1125"
          },
          "rate": {
            "type": "number",
            "description": "The percentage rate applied to this line item (i.e. 15.5 means 15.5%). If it was not set at the time of charge creation, its default value is the default rate of the account.",
            "example": "15.5%"
          },
          "merchant_data": {
            "type": "object",
            "description": "",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "mcc_code": {
                "type": "number"
              },
              "phone_number": {
                "type": "string",
                "format": "phonenumber"
              }
            }
          },
          "effective_at": {
            "type": "string",
            "description": "The `Date-Time` that this line item became/becomes active",
            "format": "date-time",
            "example": "2018-07-20T09:12:30Z"
          },
          "created_at": {
            "type": "string",
            "description": "The `Date-Time` which the line item was created in the API",
            "format": "date-time",
            "example": "2018-06-20T09:12:30Z"
          },
          "product_id": {
            "type": "string",
            "description": "the Product ID of the account",
            "format": "uuid",
            "example": "158cd7a1-d813-42d2-90a3-9a91c43f18f8"
          },
          "description": {
            "type": "string",
            "description": "A description of this particular line item if any. More common for adjustments.",
            "example": "Refund for invalid purchase"
          },
          "reference_id": {
            "type": "string",
            "description": "User ID in your system to associate with the payment for the account defined in Canopy.",
            "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
          },
          "dispute_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID for a dispute if present for this line item."
          },
          "external_ids": {
            "type": "array",
            "description": "An array of static references to ID fields in a third party system.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the External Party",
                  "example": "Globex Card Processing"
                },
                "id": {
                  "type": "string",
                  "description": "External Account ID",
                  "example": "22445702-a389-431f-927d-07b8d0750787"
                }
              }
            }
          }
        },
        "description": "An individual charge, payment, fee, or otherwise financial event that is used to calculate balances."
      }
    },
    "requestBodies": {
      "CreateProduct": {
        "description": "",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Name of the Product",
                  "example": "Blue Cash Express"
                },
                "type": {
                  "type": "string",
                  "description": "The Type of Product. If not included, defaults to `credit`",
                  "enum": [
                    "credit"
                  ],
                  "example": "credit"
                },
                "default_rate": {
                  "type": "number",
                  "description": "The percentage default rate for accounts created under this interest policy (i.e. 5.2 indicates a 5.2% interest rate). You may customize rates for each account by overriding this default rate at the time of account creation or updating the rate for a given account.",
                  "example": "5.2"
                },
                "default_credit_limit_cents": {
                  "type": "integer",
                  "description": "The default total oustanding amout of money (in cents) that an account created under this product could borrow. You may customize rates for each account by overriding this default rate at the time of account creation or updating the rate for a given account.",
                  "example": "700000"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the Product.",
                  "example": "Consumer credit card"
                },
                "status": {
                  "type": "string",
                  "description": "The status to publish this product with. This can only be `live` if all fields necessary for product creation are populated. \n If not included and all fields necessary for product creation are populated, the product will publish to the `live` state. \n If not included and any necessary fields for product creation are not populated, the product will publish to the `draft` state.",
                  "enum": [
                    "draft, live"
                  ],
                  "example": "draft"
                },
                "policies": {
                  "type": "object",
                  "description": "An Object of policies that drive Product behaviour.",
                  "properties": {
                    "base_policy_config": {
                      "$ref": "#/components/schemas/Base_Policy_Config_MVP"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateCustomer": {
        "description": "Create a new customer",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
							"properties": {
								"name_prefix": {
									"type": "string",
									"description": "Prefix to the customer's name",
									"example": "Dr."
								},
								"first_name": {
									"type": "string",
									"description": "Customer's first name",
									"example": "Miriam"
								},
								"middle_name": {
									"type": "string",
									"description": "Customer's middle name",
									"example": "Louise"
								},
								"last_name": {
									"type": "string",
									"description": "Customer's last name",
									"example": "Trevino"
								},
								"name_suffix": {
									"type": "string",
									"description": "Prefix to the customer's name",
									"example": "Jr"
								},
								"phone_number": {
									"type": "string",
									"format": "phonenumber",
									"description": "Phone number of the customer",
									"example": "555-555-5555"
								},
								"address_line_one": {
									"type": "string",
									"description": "Address line one",
									"example": "12 Strawberry Road"
								},
								"address_line_two": {
									"type": "string",
									"description": "Address line two",
									"example": "Suite 101"
								},
								"address_city": {
									"type": "string",
									"description": "Address city",
									"example": "Atlanta"
								},
								"address_state": {
									"type": "string",
									"description": "Address state",
									"example": "GA"
								},
								"address_zip": {
									"type": "string",
									"description": "Address zip code",
									"example": "99999-1000"
								},
								"ssn": {
									"type": "string",
									"description": "Social security number of the customer",
									"example": "888-88-8888"
								},
								"accounts": {
									"type": "array",
									"description": "An array of existing accounts to which this Customer is assigned. \n \n If left empty, the customer will not be assigned to any accounts, and can be later assigned to an account via the [Update an existing customer](https://docs.canopyservicing.com/#operation-put-accounts-parameter) route. \n \n Customers only become meaningful agents in Canopy's servicing system once they are assigned to accounts. \n \n *Note* - if you would like to simultaneously create a customer and assign them to an `account` in Canopy, use the [Create a new account](/#operation-post-accounts) route.",
									"items": {
										"type": "object",
										"properties": {
											"account_id": {
												"type": "string",
												"format": "uuid",
												"description": "This is generated by Canopy. A unique ID for the account.",
												"example": "5fb3a288-5f6c-440f-b079-b06c828b7768"
											},
											"customer_account_role": {
												"type": "string",
												"enum": ["primary"],
												"example": "primary"
											}
										}
									}
								}
							}
            }
          }
        }
      },
      "CreateAccount": {
        "description": "Create a new account",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
							"allOf": [
								{
									"type": "object",
									"required": [
										"product_id"
									],
									"properties": {
										"product_id": {
											"type": "string",
											"description": "the Product ID of the account",
											"format": "uuid",
											"example": "d119341c-47fd-4a55-bce7-28406dacfa20"
										},
										"external_ids": {
											"type": "array",
											"description": "An array of static references to ID fields in a third party system.",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"description": "Name of the External Party",
														"example": "Globex Corporation"
													},
													"id": {
														"type": "string",
														"description": "External Account ID",
														"example": "22445702-a389-431f-927d-07b8d0750787"
													}
												}
											}
										},
										"credit_limit_cents": {
											"type": "integer",
											"description": "Total Amount (in cents) that this account can borrow.",
											"example": "400000"
										},
										"rate": {
											"type": "number",
											"description": "The percentage interest applied to the account (i.e. 6.2%)",
											"example": "6.2"
										}
									}
								},
								{
									"type": "object",
									"properties": {
										"existing_customers": {
											"type": "array",
											"description": "Array of existing customer IDs to be added to the account. At least one existing *OR* one new customer must be included in account creation.",
											"items": {
												"type": "object",
												"properties": {
													"customer_id": {
														"type": "string",
														"format": "uuid",
														"description": "Canopy-generated unique ID for this customer",
														"example": "d581a0aa-5e11-473c-9569-64bc3a494287"
													},
													"customer_account_role": {
														"type": "string",
														"enum": ["primary"],
														"description": "The role of the customer for the account being created",
														"example": "primary"
													}
												}
											}
										}
									}
								},
								{
									"type": "object",
									"properties": {
										"new_customers": {
											"type": "array",
											"description": "Array of new customers to be added to the account. At least one existing *OR* one new customer must be included in account creation.",
											"items": {
												"type": "object",
												"properties": {
													"name_prefix": {
														"type": "string",
														"description": "Prefix to the customer's name",
														"example": "Dr."
													},
													"first_name": {
														"type": "string",
														"description": "Customer's first name",
														"example": "Miriam"
													},
													"middle_name": {
														"type": "string",
														"description": "Customer's middle name",
														"example": "Louise"
													},
													"last_name": {
														"type": "string",
														"description": "Customer's last name",
														"example": "Trevino"
													},
													"name_suffix": {
														"type": "string",
														"description": "Prefix to the customer's name",
														"example": "Jr"
													},
													"phone_number": {
														"type": "string",
														"format": "phonenumber",
														"description": "Phone number of the customer",
														"example": "555-555-5555"
													},
													"address_line_one": {
														"type": "string",
														"description": "Address line one",
														"example": "12 Strawberry Road"
													},
													"address_line_two": {
														"type": "string",
														"description": "Address line two",
														"example": "Suite 101"
													},
													"address_city": {
														"type": "string",
														"description": "Address city",
														"example": "Atlanta"
													},
													"address_state": {
														"type": "string",
														"description": "Address state",
														"example": "GA"
													},
													"address_zip": {
														"type": "string",
														"description": "Address zip code",
														"example": "99999-1000"
													},
													"ssn": {
														"type": "string",
														"description": "Social security number of the customer",
														"example": "888-88-8888"
													},
													"customer_account_role": {
														"type": "string",
														"enum": ["primary"],
														"description": "The role of the customer for the account being created",
														"example": "primary"
													}
												}
											}
										}
									}
								}
							]
            }
          }
        }
			},
			"CreateApiUserInvitation": {
				"description": "Body of request to invite new API user. Checks permissions of invite-creator.",
				"required": true,
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": ["email", "role"],
							"properties": {
								"role": {
									"type": "string",
									"description": "The role of this API User.",
									"enum": [
										"superuser"
									],
									"example": "superuser"
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The email address of this API User",
									"example": "marissa@globex.com"
								},
							}
						}
					}
				}
			},
			"CreateApiUser": {
				"description": "Body of request to create new API user.",
				"required": true,
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": ["first_name", "last_name", "email", "invitation_code"],
							"properties": {
								"invitation_code": {
									"type": "string",
									"format": "uuid",
									"description": "A secret, unique invite code to be used to set up the API User's account. Valid for 24 hours after an invite is created.",
									"example":"5c92f11e-d137-4cd5-aac1-012919419cdf"
								},
								"name_prefix": {
									"type": "string",
									"description": "Prefix to the user's name",
									"example": "Dr."
								},
								"first_name": {
									"type": "string",
									"description": "User's first name",
									"example": "Miriam"
								},
								"middle_name": {
									"type": "string",
									"description": "User's middle name",
									"example": "Louise"
								},
								"last_name": {
									"type": "string",
									"description": "User's last name",
									"example": "Trevino"
								},
								"name_suffix": {
									"type": "string",
									"description": "Prefix to the user's name",
									"example": "Jr"
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The email address of this API User",
									"example": "marissa@globex.com"
								},
								"password": {
									"type": "string",
									"description": "The password for this API User's account",
									"example": "secret_password123!!"
								}
							}
						}
					}
				}
			},
			"UpdateApiUser": {
				"description": "Body of request to update API user. Checks permissions of caller.",
				"required": true,
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": ["email", "password"],
							"properties": {
								"name_prefix": {
									"type": "string",
									"description": "Prefix to the user's name",
									"example": "Dr."
								},
								"first_name": {
									"type": "string",
									"description": "User's first name",
									"example": "Miriam"
								},
								"middle_name": {
									"type": "string",
									"description": "User's middle name",
									"example": "Louise"
								},
								"last_name": {
									"type": "string",
									"description": "User's last name",
									"example": "Trevino"
								},
								"name_suffix": {
									"type": "string",
									"description": "Prefix to the user's name",
									"example": "Jr"
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "The email address of this API User",
									"example": "marissa@globex.com"
								},
								"password": {
									"type": "string",
									"description": "The password for this API User's account",
									"example": "secret_password123!!"
								}
							}
						}
					}
				}
			},
      "CreateCharge": {
        "description": "Body of request to create charge",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "amount_cents",
                "effective_at",
                "merchant_data"
              ],
              "properties": {
                "amount_cents": {
                  "type": "integer",
                  "description": "The Integer Amount of the Charge in Cents",
                  "example": "200"
                },
                "effective_at": {
                  "type": "string",
                  "description": "The `Date-Time` that the charge should be recorded to the account. Although the charge is being added to Canopy today, it can actually be effective as of 10 days ago.",
                  "format": "date-time",
                  "example": "2020-07-20T09:11:28Z"
                },
                "rate": {
                  "type": "number",
                  "description": "The percentage rate to be applied to this charge (i.e. 15.5 means 15.5%). If not included, defaults to the rate for the acount.",
                  "example": "15.5%"
                },
                "merchant_data": {
                  "type": "object",
                  "description": "",
                  "required": [
                    "mcc_code"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "mcc_code": {
                      "type": "number"
                    },
                    "phone_number": {
                      "type": "string",
                      "format": "phonenumber"
                    }
                  }
                },
                "reference_id": {
                  "type": "string",
                  "description": "A unique ID generated in your system to associate with the Charge.",
                  "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
                },
                "external_ids": {
                  "type": "array",
                  "description": "An array of static references to ID fields in a third party system.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the External Party",
                        "example": "Globex Card Processing"
                      },
                      "id": {
                        "type": "string",
                        "description": "External Account ID",
                        "example": "22445702-a389-431f-927d-07b8d0750787"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreatePayment": {
        "description": "Body of request to create payment.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "amount_cents": {
                  "type": "integer",
                  "description": "The Integer Amount of the Payment in Cents",
                  "example": "200"
                },
                "effective_at": {
                  "type": "string",
                  "description": "The `Date-Time` that the payment should be recorded to the account. Although the payment is being added to Canopy today, it can actually be effective as of 10 days ago.",
                  "format": "date-time",
                  "example": "2020-07-20T09:11:28Z"
                },
                "reference_id": {
                  "type": "string",
                  "description": "A unique ID generated in your system to associate with the Payment.",
                  "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
                },
                "external_ids": {
                  "type": "array",
                  "description": "An array of static references to ID fields in a third party system.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the External Party",
                        "example": "Globex Card Processing"
                      },
                      "id": {
                        "type": "string",
                        "description": "External Account ID",
                        "example": "22445702-a389-431f-927d-07b8d0750787"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateCreditAdjustment": {
        "description": "Body of request to create credit adjustment.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "amount_cents": {
                  "type": "integer",
                  "description": "The Integer Amount of the credit adjustment in Cents",
                  "example": "200"
                },
                "effective_at": {
                  "type": "string",
                  "description": "The `Date-Time` that the credit adjustment should be recorded to the account. Although the payment is being added to Canopy today, it can actually be effective as of 10 days ago.",
                  "format": "date-time",
                  "example": "2020-07-20T09:11:28Z"
                },
                "reference_id": {
                  "type": "string",
                  "description": "A unique ID generated in your system to associate with the credit adjustment.",
                  "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
                },
                "external_ids": {
                  "type": "array",
                  "description": "An array of static references to ID fields in a third party system.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the External Party",
                        "example": "Globex Card Processing"
                      },
                      "id": {
                        "type": "string",
                        "description": "External Account ID",
                        "example": "22445702-a389-431f-927d-07b8d0750787"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateDebitAdjustment": {
        "description": "Body of request to create debit adjustment.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "amount_cents": {
                  "type": "integer",
                  "description": "The Integer Amount of the debit adjustment in Cents",
                  "example": "200"
                },
                "effective_at": {
                  "type": "string",
                  "description": "The `Date-Time` that the debit adjustment should be recorded to the account. Although the payment is being added to Canopy today, it can actually be effective as of 10 days ago.",
                  "format": "date-time",
                  "example": "2020-07-20T09:11:28Z"
                },
                "reference_id": {
                  "type": "string",
                  "description": "A unique ID generated in your system to associate with the debit adjustment.",
                  "example": "e39c6b0d-5793-49c5-bee7-a2dbf8808f3a"
                },
                "external_ids": {
                  "type": "array",
                  "description": "An array of static references to ID fields in a third party system.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the External Party",
                        "example": "Globex Card Processing"
                      },
                      "id": {
                        "type": "string",
                        "description": "External Account ID",
                        "example": "22445702-a389-431f-927d-07b8d0750787"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "CreateProduct": {
        "description": "Product Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the product",
                  "example": "Blue Cash Express"
                },
                "product_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "An ID for your newly created product, generated by Canopy.",
                  "example": "44c7298f-b515-4dc3-84b2-21186e1b1d3b"
                },
                "status": {
                  "type": "string",
                  "description": "The Status of a Product (i.e. `live` or `draft`). Products with the `draft` status require additional policy configurations to launch.",
                  "example": "live"
                }
              }
            }
          }
        }
      },
      "CreateCustomer": {
        "description": "New Customer Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplexCustomer"
            }
          }
        }
			},
			"ApiUser": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/API_User"
						}
					}
				}
			},
      "CreateAccount": {
        "description": "New Account Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplexAccount"
            }
          }
        }
      },
      "UpdateAccount": {
        "description": "Account Updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
			},
			"CreateApiUserInvitation": {
				"description": "Successfully invited a new user",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"email": {
									"type": "string",
									"format": "email",
									"description": "The email address of this API User",
									"example": "marissa@globex.com"
								},
								"invitation_code": {
									"type": "string",
									"format": "uuid",
									"description": "A secret, unique invite code to be used to set up the API User's account. Valid for 24 hours after an invite is created.",
									"example":"5c92f11e-d137-4cd5-aac1-012919419cdf"
								},
								"created_at": {
									"type": "string",
									"description": "The `Date-Time` which the invitation was created in the API",
									"format": "date-time",
									"example": "2018-06-20T09:12:30Z"
								},
								"expires_at": {
									"type": "string",
									"description": "The `Date-Time` which the invitation expires",
									"format": "date-time",
									"example": "2018-06-21T09:12:30Z"
								}
							}
						}
					}
				}
			},
      "CreateCharge": {
        "description": "Charge Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "line_item_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID in Canopy's system for this line item.",
                  "example": "e58b78c3-0df8-4895-b10c-0fa88b266119"
                }
              }
            }
          }
        }
      },
      "CreatePayment": {
        "description": "Charge Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "line_item_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID in Canopy's system for this line item.",
                  "example": "464920a3-d531-422d-adfb-ce61e52255bf"
                }
              }
            }
          }
        }
      },
      "CreateCreditAdjustment": {
        "description": "Credit Adjustment Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "line_item_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID in Canopy's system for this line item.",
                  "example": "464920a3-d531-422d-adfb-ce61e52255bf"
                }
              }
            }
          }
        }
      },
      "CreateDebitAdjustment": {
        "description": "Debit Adjustment Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "line_item_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The ID in Canopy's system for this line item.",
                  "example": "464920a3-d531-422d-adfb-ce61e52255bf"
                }
              }
            }
          }
        }
      },
      "Account": {
        "description": "Successful query of information for a specific account",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplexAccount"
            }
          }
        }
			},
			"Customer": {
        "description": "Successful query of information for a specific customer",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ComplexCustomer"
            }
          }
        }
      },
      "AccountStatement": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product_Summary"
            }
          }
        }
      },
      "ProductAccounts": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "",
              "properties": {
                "current_accounts": {
                  "type": "array",
                  "description": "Array of Accounts that are currently using this Product",
                  "items": {
                    "type": "string",
                    "description": "Account ID",
                    "format": "uuid",
                    "example": "5e860ad7-5fff-4130-844c-ec9ead83a025"
                  }
                }
              }
            }
          }
        }
      },
      "ProductSummary": {
        "description": "Response for a request for summary data for a specific product.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Summary of product information",
              "properties": {
                "accounts_overview": {
                  "type": "object",
                  "properties": {
                    "account_count_total": {
                      "type": "integer",
                      "description": "Total number of accounts under the product.",
                      "example": 10005
                    },
                    "account_count_delinquent": {
                      "type": "integer",
                      "description": "Total number of delinquent accounts under the product.",
                      "example": 200
                    }
                  }
                },
                "total_credit_issued_cents": {
                  "type": "integer",
                  "description": "Total amount (in cents) of credit issued to accounts under the product.",
                  "example": 25500000
                },
                "utilization_rate": {
                  "type": "number",
                  "description": "The percent utilization rate of the product.",
                  "example": 30.34
                },
                "product_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The Canopy-generated ID for the product.",
                  "example": "ca3cf4e9-5048-4461-a763-8f67b46dfd4d"
                },
                "effective_as_of_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The `Date-Time` you would like the system to return the data as of. IE \"tell me what the product information was as if I had asked on `2020-01-20 00:00:00 EST`\". If empty defaults to current time.",
                  "example": "2017-06-20T09:12:14Z"
                }
              }
            }
          }
        }
      },
      "LineItem": {
        "description": "Detailed info about a specific line item",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Summary of account information",
              "properties": {
                "originating_amount_cents": {
                  "type": "number",
                  "description": "The originating amount of money (in cents) relating to this line item.",
                  "example": "2385"
                },
                "balance_amount_cents": {
                  "type": "number",
                  "description": "The current balance of the line item, which accounts for interest accrued per the `product's` interest policy and the `account's` interest rate attribute.",
                  "example": "2401"
                },
                "total_interest_accrued_cents": {
                  "type": "number",
                  "description": "The sum (in cents) of all interest charges, if any, applied to this line item",
                  "example": "16"
                },
                "total_paid_down_cents": {
                  "type": "number",
                  "description": "The sum (in cents) of all payment splits, if any, applied to this line item",
                  "example": "1125"
                },
                "effective_as_of_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The `Date-Time` you would like the system to return the data as of. IE tell me what the account information was as if I had asked on `2020-10-20 00:00:00 EST`. If empty it defaults to current time.",
                  "example": "2018-07-20T09:10:14Z"
                },
                "line_item_details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "line_item_detail_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "2e9ad65e-3bf0-4be2-8117-a8c992f08774"
                      },
                      "date": {
                        "type": "string",
                        "description": "The date the detail was applied to the line item",
                        "format": "date-time"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of detail being applied to the line item",
                        "enum": [
                          "payment_split, interest"
                        ],
                        "example": "payment_split"
                      },
                      "amount_cents": {
                        "type": "number",
                        "description": "The value, in cents, of this line item detail",
                        "example": "0054"
                      },
                      "balance_cents": {
                        "type": "number",
                        "description": "The balance of the line item, in cents, after this detail is applied",
                        "example": "20988"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
